!function(e){function n(o){if(t[o])return t[o].exports;var s=t[o]={i:o,l:!1,exports:{}};return e[o].call(s.exports,s,s.exports,n),s.l=!0,s.exports}var t={};return n.m=e,n.c=t,n.i=function(e){return e},n.d=function(e,n,t){Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:t})},n.n=function(e){var t=e&&e.__esModule?function(){return e["default"]}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},n.p="",n(n.s=0)}([function(e,n){$(function(){function e(){t&&ga.apply(this,arguments)}var n=window.Laravel.apiUrl,t=!!window.ga;$('[data-toggle="popover"]').popover(),$("button#send-to-backpack").on("click",function(){e("send","event","Badges","click","User initialized sending badges to Backpack"),$.getJSON(n+"/badges/mine",function(t){if(_.size(t)>0){var o=_.map(t,function(e){return e.assertion});OpenBadges.issue(o,function(s,r){if(e("send","event","Badges","issue","User sent badges to Backpack",o.length,{nonInteraction:!0}),r.length>0){e("send","event","Badges","issueSuccesses","Number of badges successfully issued",r.length,{nonInteraction:!0});var i=[];_.each(t,function(e){_.indexOf(r,e.assertion)!==-1&&i.push(e.badge)}),$.post(n+"/badges/mine",{badges:i},null)}})}})})})}]);